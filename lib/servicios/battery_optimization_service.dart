import 'package:flutter/services.dart';
import 'package:permission_handler/permission_handler.dart';

class BatteryOptimizationService {
  static const MethodChannel _channel = MethodChannel('battery_optimization');

  /// Solicitar al usuario que desactive la optimizaci√≥n de bater√≠a
  static Future<bool> requestIgnoreBatteryOptimization() async {
    try {
      // Solicitar permiso para ignorar optimizaci√≥n de bater√≠a
      final result = await _channel.invokeMethod('requestIgnoreBatteryOptimization');
      print('üîã Resultado optimizaci√≥n bater√≠a: $result');
      return result ?? false;
    } catch (e) {
      print('‚ùå Error solicitando optimizaci√≥n bater√≠a: $e');
      return false;
    }
  }

  /// Verificar si la app est√° exenta de optimizaci√≥n de bater√≠a
  static Future<bool> isIgnoringBatteryOptimizations() async {
    try {
      final result = await _channel.invokeMethod('isIgnoringBatteryOptimizations');
      return result ?? false;
    } catch (e) {
      print('‚ùå Error verificando optimizaci√≥n bater√≠a: $e');
      return false;
    }
  }

  /// Solicitar permisos cr√≠ticos para notificaciones
  static Future<void> requestCriticalPermissions() async {
    try {
      // Solicitar permiso de notificaciones
      await Permission.notification.request();
      
      // Solicitar ignorar optimizaci√≥n de bater√≠a
      await requestIgnoreBatteryOptimization();
      
      print('‚úÖ Permisos cr√≠ticos solicitados');
    } catch (e) {
      print('‚ùå Error solicitando permisos cr√≠ticos: $e');
    }
  }
}
